@using Soofle.Domain.Participants.Enums
@using Soofle.Domain.Reposts.ParticipantReport.Enums
@model IEnumerable<Soofle.WEB.ViewModels.Elements.ParticipantElementViewModel>
@foreach (var element in Model.OrderByDescending(x => x.Type))
{
    <tr class="element">
        <td class="child">
            <span>@element.Name</span>
            @if (element.NewName != null)
            {
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
                </svg>
                <span>@element.NewName</span>
                <a href="https://vk.com/@element.NewName">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="16px" height="16px">
                        <path fill="#1976d2" d="M24,4C13,4,4,13,4,24s9,20,20,20s20-9,20-20S35,4,24,4z"/><path fill="#fff" d="M25.2,33.2c-9,0-14.1-6.1-14.3-16.4h4.5c0.1,7.5,3.5,10.7,6.1,11.3V16.8h4.2v6.5c2.6-0.3,5.3-3.2,6.2-6.5h4.2	c-0.7,4-3.7,7-5.8,8.2c2.1,1,5.5,3.6,6.7,8.2h-4.7c-1-3.1-3.5-5.5-6.8-5.9v5.9H25.2z"/>
                    </svg>
                </a>
            }
            else
            {
                <a href="https://vk.com/@element.Name">
                    <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="16px" height="16px">
                        <path fill="#1976d2" d="M24,4C13,4,4,13,4,24s9,20,20,20s20-9,20-20S35,4,24,4z"/><path fill="#fff" d="M25.2,33.2c-9,0-14.1-6.1-14.3-16.4h4.5c0.1,7.5,3.5,10.7,6.1,11.3V16.8h4.2v6.5c2.6-0.3,5.3-3.2,6.2-6.5h4.2	c-0.7,4-3.7,7-5.8,8.2c2.1,1,5.5,3.6,6.7,8.2h-4.7c-1-3.1-3.5-5.5-6.8-5.9v5.9H25.2z"/>
                    </svg>
                </a>
            }
        </td>
        <td class="child">
            @switch (element.ParticipantType)
            {
                case ParticipantType.Group:
                    <span class="badge  bg-info">Группа</span>
                    break;
                case ParticipantType.User:
                    <span class="badge bg-success">Пользователь</span>
                    break;
            }
        </td>
        <td class="main">
            @if (element.Children.Any())
            {
                <div class="table-responsive">
                    <table class="table table-sm table-hover table-bordered table-striped table-condensed text-center align-middle">
                        <thead class="align-middle">
                        <tr>
                            <th scope="col">Участник</th>
                            <th scope="col">Статус</th>
                        </tr>
                        </thead>
                        <tbody class="align-middle">
                        @foreach (var childElement in element.Children)
                        {
                            <tr>
                                <td class="child">
                                    <span>@childElement.Name</span>
                                    @if (childElement.NewName != null)
                                    {
                                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-arrow-right" viewBox="0 0 16 16">
                                            <path fill-rule="evenodd" d="M1 8a.5.5 0 0 1 .5-.5h11.793l-3.147-3.146a.5.5 0 0 1 .708-.708l4 4a.5.5 0 0 1 0 .708l-4 4a.5.5 0 0 1-.708-.708L13.293 8.5H1.5A.5.5 0 0 1 1 8z"/>
                                        </svg>
                                        <span>@childElement.NewName</span>
                                        <a href="https://vk.com/@childElement.NewName">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="16px" height="16px">
                                                <path fill="#1976d2" d="M24,4C13,4,4,13,4,24s9,20,20,20s20-9,20-20S35,4,24,4z"/><path fill="#fff" d="M25.2,33.2c-9,0-14.1-6.1-14.3-16.4h4.5c0.1,7.5,3.5,10.7,6.1,11.3V16.8h4.2v6.5c2.6-0.3,5.3-3.2,6.2-6.5h4.2	c-0.7,4-3.7,7-5.8,8.2c2.1,1,5.5,3.6,6.7,8.2h-4.7c-1-3.1-3.5-5.5-6.8-5.9v5.9H25.2z"/>
                                            </svg>
                                        </a>
                                    }
                                    else
                                    {
                                        <a href="https://vk.com/@childElement.Name">
                                            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 48 48" width="16px" height="16px">
                                                <path fill="#1976d2" d="M24,4C13,4,4,13,4,24s9,20,20,20s20-9,20-20S35,4,24,4z"/><path fill="#fff" d="M25.2,33.2c-9,0-14.1-6.1-14.3-16.4h4.5c0.1,7.5,3.5,10.7,6.1,11.3V16.8h4.2v6.5c2.6-0.3,5.3-3.2,6.2-6.5h4.2	c-0.7,4-3.7,7-5.8,8.2c2.1,1,5.5,3.6,6.7,8.2h-4.7c-1-3.1-3.5-5.5-6.8-5.9v5.9H25.2z"/>
                                            </svg>
                                        </a>
                                    }
                                </td>
                                <td class="child">
                                    @if (childElement.Type.HasValue)
                                    {
                                        switch (childElement.Type)
                                        {
                                            case ElementType.New:
                                                <span class="badge bg-success">Добавлен в чат</span>
                                                break;
                                            case ElementType.Leave:
                                                <span class="badge bg-danger">Покинул чат</span>
                                                break;
                                            case ElementType.Rename:
                                                <span class="badge bg-primary">Сменил ник</span>
                                                break;
                                        }
                                    }
                                </td>
                            </tr>
                        }
                        </tbody>
                    </table>
                </div>
            }
        </td>
        <td class="child">
            @if (element.Type.HasValue)
            {
                switch (element.Type)
                {
                    case ElementType.New:
                        <span class="badge bg-success">Добавлен в чат</span>
                        break;
                    case ElementType.Leave:
                        <span class="badge bg-danger">Покинул чат</span>
                        break;
                    case ElementType.Rename:
                        <span class="badge bg-primary">Сменил ник</span>
                        break;
                    case ElementType.Stay:
                        <span class="badge bg-info">Без изменений</span>
                        break;
                }
            }
        </td>
    </tr>
}